import { useEffect, useState } from 'react';
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';
import GuestLayout from '@/Layouts/GuestLayout';
import { Head, Link, useForm, router } from '@inertiajs/react';
import axios from 'axios';

export default function Show({ auth, project }) {
    const { delete: destroy, processing } = useForm();
    const isAuthenticated = auth.user !== null;

    // ‚úÖ „ÅÑ„ÅÑ„Å≠Áä∂ÊÖã„Å®„ÅÑ„ÅÑ„Å≠Êï∞„ÇíÁÆ°ÁêÜ
    const [isLiked, setIsLiked] = useState(false);
    const [likeCount, setLikeCount] = useState(project.like_count || 0);

    useEffect(() => {
        console.log("‚úÖ „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Éº„Çø:", project);
        console.log("‚úÖ „ÉÅ„Éº„É†„ÅÆ„É°„É≥„Éê„Éº:", project.team?.users);
        console.log("‚úÖ Ë™çË®º„É¶„Éº„Ç∂„Éº:", auth.user);

        // ‚úÖ „ÅÑ„ÅÑ„Å≠Êï∞„ÅØË™∞„Åß„ÇÇÂèñÂæó„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã
        axios.get(`/projects/${project.id}/like-count`)
            .then((response) => {
                setLikeCount(response.data.count);
            })
            .catch((error) => {
                console.error("Failed to fetch like count:", error);
            });

        // ‚úÖ „ÅÑ„ÅÑ„Å≠Ê∏à„Åø„Åã„Å©„ÅÜ„Åã„ÅØ„É≠„Ç∞„Ç§„É≥„É¶„Éº„Ç∂„Éº„ÅÆ„ÅøÂèñÂæó
        if (isAuthenticated) {
            axios.get(`/projects/${project.id}/is-liked`)
                .then((response) => {
                    setIsLiked(response.data.liked); // ‚úÖ `setLiked` ‚Üí `setIsLiked` „Å´‰øÆÊ≠£
                })
                .catch((error) => {
                    console.error("‚ùå „ÅÑ„ÅÑ„Å≠Áä∂ÊÖã„ÅÆÂèñÂæó„Å´Â§±Êïó:", error);
                });
        }
    }, [project, isAuthenticated]);

    const toggleLike = async () => {
        if (!isAuthenticated) {
            alert("„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô");
            return;
        }

        console.log(`üëç „ÅÑ„ÅÑ„Å≠„Éú„Çø„É≥„ÅåÊäº„Åï„Çå„Åæ„Åó„ÅüÔºÅ(ID: ${project.id})`);

        // ‚úÖ UI„ÇíÂç≥ÊôÇÊõ¥Êñ∞
        setIsLiked((prev) => !prev);
        setLikeCount((prev) => (!isLiked ? prev + 1 : prev - 1));

        try {
            const response = await axios.post(`/projects/${project.id}/like`);
            console.log("‚úÖ API„É¨„Çπ„Éù„É≥„Çπ:", response.data);

            // ‚úÖ API„ÅÆÁµêÊûú„ÇíÂèçÊò†ÔºàÁ¢∫ÂÆöÂá¶ÁêÜÔºâ
            setIsLiked(response.data.liked);
            setLikeCount((prev) => (response.data.liked ? prev : prev));
        } catch (error) {
            console.error("‚ùå „ÅÑ„ÅÑ„Å≠„ÅÆÂàá„ÇäÊõø„Åà„Å´Â§±Êïó:", error);

            // ‚úÖ „Ç®„É©„ÉºÊôÇ„Å´„ÅØÂÖÉ„ÅÆÁä∂ÊÖã„Å´Êàª„Åô
            setIsLiked((prev) => !prev);
            setLikeCount((prev) => (!isLiked ? prev - 1 : prev + 1));
        }
    };

    // ‚úÖ „É¶„Éº„Ç∂„Éº„Åå„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„É™„Éº„ÉÄ„Éº„ÅãÂà§ÂÆö
    const isLeader = isAuthenticated
        ? (project.team?.users ?? []).some(user => user.id === auth.user.id && user.pivot?.role === 'owner')
        : false;

    console.log("üî• isLeader Âà§ÂÆö:", isLeader);

    // ‚úÖ „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂâäÈô§Âá¶ÁêÜ
    const handleDelete = () => {
        if (confirm("Êú¨ÂΩì„Å´„Åì„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü „Åì„ÅÆÊìç‰Ωú„ÅØÂÖÉ„Å´Êàª„Åõ„Åæ„Åõ„Çì„ÄÇ")) {
            destroy(route('projects.destroy', project.id), {
                onSuccess: () => router.visit(route('home')),
            });
        }
    };

    return isAuthenticated ? (
        <AuthenticatedLayout
            user={auth.user}
            header={<h2 className="font-semibold text-xl text-gray-800 leading-tight">{project.project_name}</h2>}
        >
            <Head title={project.project_name} />

            <div className="py-12 bg-[#1e1e1e] min-h-screen">
                <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-[#2c2c2c] bg-white overflow-hidden shadow-sm sm:rounded-lg p-6">

                        {project.project_image_url ? (
                            <img
                                src={project.project_image_url}
                                alt="„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁîªÂÉè"
                                className="mt-4 w-full max-w-md mx-auto rounded-xl shadow-lg object-cover"
                            />
                        ) : (
                            <div className="mt-4 w-full max-w-md mx-auto h-48 bg-gray-200 flex items-center justify-center rounded-xl text-gray-500">
                                No Image
                            </div>
                        )}

                        <div className="mt-6 space-y-2 text-black">
                            <p>üìõ „Ç¢„Éó„É™Âêç: <span className="font-semibold">{project.app_name || "Êú™Ë®≠ÂÆö"}</span></p>
                            <p>
                                üîó GitHub:{" "}
                                {project.github_url ? (
                                    <a href={project.github_url} className="text-blue-300 hover:underline" target="_blank" rel="noopener noreferrer">
                                        {project.github_url}
                                    </a>
                                ) : "Êú™ÁôªÈå≤"}
                            </p>
                            <p>
                                üåç ÂÖ¨ÈñãURL:{" "}
                                {project.live_url ? (
                                    <a href={project.live_url} className="text-blue-300 hover:underline" target="_blank" rel="noopener noreferrer">
                                        {project.live_url}
                                    </a>
                                ) : "Êú™ÁôªÈå≤"}
                            </p>
                        </div>


                        <div className="mt-6 flex items-center space-x-3">
                            <button
                                onClick={toggleLike}
                                className={`text-2xl transition transform ${isLiked ? "text-pink-500 scale-110" : "text-gray-400"}`}
                                title="„ÅÑ„ÅÑ„Å≠"
                            >
                                {isLiked ? "‚ù§Ô∏è" : "ü§ç"}
                            </button>
                            <span className="text-black font-semibold">{likeCount}</span>
                        </div>

                        <div className="mt-8">
                            <h4 className="text-lg font-bold text-black mb-2">üë• „ÉÅ„Éº„É†</h4>
                            {project.team ? (
                                <Link href={route('teams.show', project.team.id)} className="text-blue-400 hover:underline">
                                    {project.team.team_name}
                                </Link>
                            ) : (
                                <p className="text-gray-400">„ÉÅ„Éº„É†Êú™ÊâÄÂ±û</p>
                            )}
                        </div>

                        <div className="mt-6">
                            <h4 className="text-lg font-bold text-black mb-2">üõ† ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ</h4>
                            {(project.tech_stacks ?? []).length > 0 ? (
                                <div className="flex flex-wrap gap-2">
                                    {project.tech_stacks.map(stack => (
                                        <span key={stack.id} className="bg-blue-300 text-blue-900 px-3 py-1 rounded-full text-sm shadow">
                                            {stack.name}
                                        </span>
                                    ))}
                                </div>
                            ) : (
                                <p className="text-gray-400">Êú™ÁôªÈå≤</p>
                            )}
                        </div>

                        <div className="mt-6">
                            <h4 className="text-lg font-bold text-black mb-2">üè∑ „Çø„Ç∞</h4>
                            {(project.tags ?? []).length > 0 ? (
                                <div className="flex flex-wrap gap-2">
                                    {project.tags.map(tag => (
                                        <span key={tag.id} className="bg-purple-200 text-purple-800 px-3 py-1 rounded-full text-sm shadow">
                                            {tag.name}
                                        </span>
                                    ))}
                                </div>
                            ) : (
                                <p className="text-gray-400">Êú™ÁôªÈå≤</p>
                            )}
                        </div>


                        <div className="mt-8">
                            <h4 className="text-lg font-bold text-black mb-4">üóÇ Â∑•Á®ã‰∏ÄË¶ß</h4>
                            {(project.project_steps ?? []).length > 0 ? (
                                <div className="space-y-6 relative">
                                    {project.project_steps.map((step, index) => (
                                        <div key={step.id} className="relative">
                                            {/* „Çπ„ÉÜ„ÉÉ„ÉóË°®Á§∫ */}
                                            <div className="bg-gray-800 p-4 rounded-lg shadow text-white">
                                                <h5 className="font-semibold text-lg">{step.title}</h5>
                                                <p className="mt-2 text-sm text-gray-200">{step.description}</p>
                                            </div>

                                            {/* ‚Üì Áü¢Âç∞„ÅÆË°®Á§∫ÔºàÊúÄÂæå„ÅÆÂ∑•Á®ã‰ª•Â§ñÔºâ */}
                                            {index !== project.project_steps.length - 1 && (
                                                <div className="flex justify-center my-2 text-black text-xl">
                                                    ‚Üì
                                                </div>
                                            )}
                                        </div>
                                    ))}
                                </div>
                            ) : (
                                <p className="text-white">Â∑•Á®ã„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </div>

                        <div className="mt-8 flex flex-wrap gap-4">
                            {(project.team?.users ?? []).some(user => user.id === auth.user.id) && (
                                <>
                                    <Link
                                        href={route('projects.edit', project.id)}
                                        className="bg-yellow-400 text-black px-4 py-2 rounded shadow hover:bg-yellow-500 transition"
                                    >
                                        ‚úèÔ∏è Á∑®ÈõÜ
                                    </Link>
                                    {isLeader && (
                                        <button
                                            onClick={handleDelete}
                                            className="bg-red-500 text-black px-4 py-2 rounded shadow hover:bg-red-600 transition"
                                            disabled={processing}
                                        >
                                            üóëÔ∏è ÂâäÈô§
                                        </button>
                                    )}
                                </>
                            )}
                            <Link
                                href={route('home')}
                                className="bg-blue-500 text-black px-4 py-2 rounded shadow hover:bg-blue-600 transition"
                            >
                                üè† „Éõ„Éº„É†„Å∏Êàª„Çã
                            </Link>
                        </div>
                    </div>
                </div>
            </div>
        </AuthenticatedLayout>
    ) : (
        <GuestLayout>
            <Head title={project.project_name} />

            <div className="py-12">
                <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-white overflow-hidden shadow-sm sm:rounded-lg p-6">
                        <h3 className="text-lg font-semibold">„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË©≥Á¥∞</h3>

                        {project.project_image_url ? (
                            <img
                                src={project.project_image_url}
                                alt="„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁîªÂÉè"
                                className="mt-4 w-full max-w-md mx-auto rounded-xl shadow-lg object-cover"
                            />
                        ) : (
                            <div className="mt-4 w-full max-w-md mx-auto h-48 bg-gray-200 flex items-center justify-center rounded-xl text-gray-500">
                                No Image
                            </div>
                        )}

                        <div className="mt-6 space-y-2 text-black">
                            <p>üìõ „Ç¢„Éó„É™Âêç: <span className="font-semibold">{project.app_name || "Êú™Ë®≠ÂÆö"}</span></p>
                            <p>
                                üîó GitHub:{" "}
                                {project.github_url ? (
                                    <a href={project.github_url} className="text-blue-300 hover:underline" target="_blank" rel="noopener noreferrer">
                                        {project.github_url}
                                    </a>
                                ) : "Êú™ÁôªÈå≤"}
                            </p>
                            <p>
                                üåç ÂÖ¨ÈñãURL:{" "}
                                {project.live_url ? (
                                    <a href={project.live_url} className="text-blue-300 hover:underline" target="_blank" rel="noopener noreferrer">
                                        {project.live_url}
                                    </a>
                                ) : "Êú™ÁôªÈå≤"}
                            </p>
                        </div>

                        {/* ‚úÖ „ÅÑ„ÅÑ„Å≠Ê©üËÉΩ */}
                        <div className="mt-4 flex items-center">
                            <span className="text-gray-600 mr-2">{likeCount} „ÅÑ„ÅÑ„Å≠</span>
                        </div>


                        <div className="mt-8">
                            <h4 className="text-lg font-bold text-black mb-2">üë• „ÉÅ„Éº„É†</h4>
                            {project.team ? (
                                <Link href={route('teams.show', project.team.id)} className="text-blue-400 hover:underline">
                                    {project.team.team_name}
                                </Link>
                            ) : (
                                <p className="text-gray-400">„ÉÅ„Éº„É†Êú™ÊâÄÂ±û</p>
                            )}
                        </div>

                        <div className="mt-6">
                            <h4 className="text-lg font-bold text-black mb-2">üõ† ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ</h4>
                            {(project.tech_stacks ?? []).length > 0 ? (
                                <div className="flex flex-wrap gap-2">
                                    {project.tech_stacks.map(stack => (
                                        <span key={stack.id} className="bg-blue-300 text-blue-900 px-3 py-1 rounded-full text-sm shadow">
                                            {stack.name}
                                        </span>
                                    ))}
                                </div>
                            ) : (
                                <p className="text-gray-400">Êú™ÁôªÈå≤</p>
                            )}
                        </div>

                        <div className="mt-6">
                            <h4 className="text-lg font-bold text-black mb-2">üè∑ „Çø„Ç∞</h4>
                            {(project.tags ?? []).length > 0 ? (
                                <div className="flex flex-wrap gap-2">
                                    {project.tags.map(tag => (
                                        <span key={tag.id} className="bg-purple-200 text-purple-800 px-3 py-1 rounded-full text-sm shadow">
                                            {tag.name}
                                        </span>
                                    ))}
                                </div>
                            ) : (
                                <p className="text-gray-400">Êú™ÁôªÈå≤</p>
                            )}
                        </div>


                        <div className="mt-8">
                            <h4 className="text-lg font-bold text-black mb-4">üóÇ Â∑•Á®ã‰∏ÄË¶ß</h4>
                            {(project.project_steps ?? []).length > 0 ? (
                                <div className="space-y-6 relative">
                                    {project.project_steps.map((step, index) => (
                                        <div key={step.id} className="relative">
                                            {/* „Çπ„ÉÜ„ÉÉ„ÉóË°®Á§∫ */}
                                            <div className="bg-gray-800 p-4 rounded-lg shadow text-black">
                                                <h5 className="font-semibold text-lg">{step.title}</h5>
                                                <p className="mt-2 text-sm text-gray-200">{step.description}</p>
                                            </div>

                                            {/* ‚Üì Áü¢Âç∞„ÅÆË°®Á§∫ÔºàÊúÄÂæå„ÅÆÂ∑•Á®ã‰ª•Â§ñÔºâ */}
                                            {index !== project.project_steps.length - 1 && (
                                                <div className="flex justify-center my-2 text-black text-xl">
                                                    ‚Üì
                                                </div>
                                            )}
                                        </div>
                                    ))}
                                </div>
                            ) : (
                                <p className="text-black">Â∑•Á®ã„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </div>



                        <div className="mt-8 flex flex-wrap gap-4">
                            <Link
                                href={route('home')}
                                className="bg-blue-500 text-black px-4 py-2 rounded shadow hover:bg-blue-600 transition"
                            >
                                üè† „Éõ„Éº„É†„Å∏Êàª„Çã
                            </Link>
                        </div>
                    </div>
                </div>
            </div>
        </GuestLayout>
    );
}
