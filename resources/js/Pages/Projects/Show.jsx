import { useEffect, useState } from 'react';
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';
import GuestLayout from '@/Layouts/GuestLayout';
import { Head, Link, useForm, router } from '@inertiajs/react';
import axios from 'axios';

export default function Show({ auth, project }) {
    const { delete: destroy, processing } = useForm();

    // ‚úÖ „ÅÑ„ÅÑ„Å≠Áä∂ÊÖã„Å®„ÅÑ„ÅÑ„Å≠Êï∞„ÇíÁÆ°ÁêÜ
    const [liked, setLiked] = useState(false);
    const [likeCount, setLikeCount] = useState(project.like_count || 0);

    useEffect(() => {
        console.log("‚úÖ „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éá„Éº„Çø:", project);
        console.log("‚úÖ „ÉÅ„Éº„É†„ÅÆ„É°„É≥„Éê„Éº:", project.team?.users);
        console.log("‚úÖ Ë™çË®º„É¶„Éº„Ç∂„Éº:", auth.user);

        // ‚úÖ „ÅÑ„ÅÑ„Å≠Êï∞„ÅØË™∞„Åß„ÇÇÂèñÂæó„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã
        axios.get(`/projects/${project.id}/like-count`)
            .then((response) => {
                setLikeCount(response.data.count);
            })
            .catch((error) => {
                console.error("Failed to fetch like count:", error);
            });

        // ‚úÖ „ÅÑ„ÅÑ„Å≠Ê∏à„Åø„Åã„Å©„ÅÜ„Åã„ÅØ„É≠„Ç∞„Ç§„É≥„É¶„Éº„Ç∂„Éº„ÅÆ„ÅøÂèñÂæó
        if (auth.user) {
            axios.get(`/projects/${project.id}/is-liked`)
                .then((response) => {
                    setLiked(response.data.liked);
                })
                .catch((error) => {
                    console.error("Failed to fetch like status:", error);
                });
        }
    }, [project, auth]);

    const toggleLike = async () => {
        if (!auth.user) {
            alert("„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô");
            return;
        }

        try {
            const response = await axios.post(`/projects/${project.id}/like`);
            setLiked(response.data.liked);
            setLikeCount((prevCount) => response.data.liked ? prevCount + 1 : prevCount - 1);
        } catch (error) {
            console.error("Failed to toggle like:", error);
        }
    };

    // ‚úÖ „É¶„Éº„Ç∂„Éº„Åå„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„É™„Éº„ÉÄ„Éº„ÅãÂà§ÂÆö
    const isLeader = auth.user
        ? (project.team?.users ?? []).some(user => user.id === auth.user.id && user.pivot?.role === 'owner')
        : false;

    console.log("üî• isLeader Âà§ÂÆö:", isLeader);

    // ‚úÖ „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂâäÈô§Âá¶ÁêÜ
    const handleDelete = () => {
        if (confirm("Êú¨ÂΩì„Å´„Åì„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü „Åì„ÅÆÊìç‰Ωú„ÅØÂÖÉ„Å´Êàª„Åõ„Åæ„Åõ„Çì„ÄÇ")) {
            destroy(route('projects.destroy', project.id), {
                onSuccess: () => router.visit(route('home')),
            });
        }
    };

    return auth.user ? (
        <AuthenticatedLayout
            user={auth.user}
            header={<h2 className="font-semibold text-xl text-gray-800 leading-tight">{project.project_name}</h2>}
        >
            <Head title={project.project_name} />

            <div className="py-12">
                <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-white overflow-hidden shadow-sm sm:rounded-lg p-6">
                        <h3 className="text-lg font-semibold">„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË©≥Á¥∞</h3>
                        <p className="mt-2 text-gray-700">{project.app_name}</p>
                        <p className="mt-2 text-gray-700">{project.project_image_url}</p>
                        <p className="mt-2 text-gray-700">
                            GitHub: <a href={project.github_url} className="text-blue-600 hover:underline">{project.github_url}</a>
                        </p>
                        <p className="mt-2 text-gray-700">
                            ÂÖ¨ÈñãURL: <a href={project.live_url} className="text-blue-600 hover:underline">{project.live_url}</a>
                        </p>

                        {/* ‚úÖ „ÅÑ„ÅÑ„Å≠Ê©üËÉΩ */}
                        <div className="mt-4 flex items-center">
                            <span className="text-gray-600 mr-2">{likeCount} „ÅÑ„ÅÑ„Å≠</span>
                            <button
                                onClick={toggleLike}
                                className={`ml-4 px-3 py-1 text-white rounded ${liked ? 'bg-red-500' : 'bg-gray-500'}`}
                            >
                                {liked ? '‚ù§Ô∏è „ÅÑ„ÅÑ„Å≠Ëß£Èô§' : 'ü§ç „ÅÑ„ÅÑ„Å≠'}
                            </button>
                        </div>

                        <h4 className="mt-4 font-semibold">„ÉÅ„Éº„É†</h4>
                        {project.team ? (
                            <p className="mt-2">
                                <Link href={route('teams.show', project.team.id)} className="text-blue-500 hover:underline">
                                    {project.team.team_name}
                                </Link>
                            </p>
                        ) : (
                            <p className="text-gray-500">„ÉÅ„Éº„É†„Å™„Åó</p>
                        )}

                        <h4 className="mt-4 font-semibold">ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ</h4>
                        <ul className="mt-2">
                            {(project.tech_stacks ?? []).length > 0 ? (
                                project.tech_stacks.map((stack) => (
                                    <li key={stack.id}>{stack.name}</li>
                                ))
                            ) : (
                                <p className="text-gray-500">ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </ul>

                        <h4 className="mt-4 font-semibold">„Çø„Ç∞</h4>
                        <ul className="mt-2">
                            {(project.tags ?? []).length > 0 ? (
                                project.tags.map((tag) => (
                                    <li key={tag.id}>{tag.name}</li>
                                ))
                            ) : (
                                <p className="text-gray-500">„Çø„Ç∞„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </ul>

                        <h4 className="mt-4 font-semibold">Â∑•Á®ã‰∏ÄË¶ß</h4>
                        <ul className="mt-2">
                            {(project.project_steps ?? []).length > 0 ? (
                                project.project_steps.map((step) => (
                                    <li key={step.id} className="border-b py-2">
                                        <h4 className="font-semibold">{step.title}</h4>
                                        <p className="text-gray-600">{step.description}</p>
                                    </li>
                                ))
                            ) : (
                                <p className="text-gray-500">Â∑•Á®ã„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </ul>

                        {/* ‚úÖ „ÉÅ„Éº„É†„É°„É≥„Éê„Éº„ÅÆ„ÅøÁ∑®ÈõÜ„Éú„Çø„É≥„ÇíË°®Á§∫ */}
                        {(project.team?.users ?? []).some(user => user.id === auth.user.id) && (
                            <div className="mt-6 space-x-2">
                                <Link
                                    href={route('projects.edit', project.id)}
                                    className="px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600"
                                >
                                    Á∑®ÈõÜ
                                </Link>
                                {/* ‚úÖ „É™„Éº„ÉÄ„Éº„ÅÆ„ÅøÂâäÈô§„Éú„Çø„É≥„ÇíË°®Á§∫ */}
                                {isLeader && (
                                    <button
                                        onClick={handleDelete}
                                        className="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"
                                        disabled={processing}
                                    >
                                        ÂâäÈô§
                                    </button>
                                )}
                            </div>
                        )}

                        {/* ‚úÖ „Éõ„Éº„É†„Å´Êàª„Çã„Éú„Çø„É≥ */}
                        <div className="mt-6">
                            <Link href={route('home')} className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                                „Éõ„Éº„É†„Å∏Êàª„Çã
                            </Link>
                        </div>
                    </div>
                </div>
            </div>
        </AuthenticatedLayout>
    ) : (
        <GuestLayout>
            <Head title={project.project_name} />

            <div className="py-12">
                <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-white overflow-hidden shadow-sm sm:rounded-lg p-6">
                        <h3 className="text-lg font-semibold">„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË©≥Á¥∞</h3>
                        <p className="mt-2 text-gray-700">{project.app_name}</p>

                        <p className="mt-2 text-gray-700">{project.project_image_url}</p>
                        <p className="mt-2 text-gray-700">
                            GitHub: <a href={project.github_url} className="text-blue-600 hover:underline">{project.github_url}</a>
                        </p>
                        <p className="mt-2 text-gray-700">
                            ÂÖ¨ÈñãURL: <a href={project.live_url} className="text-blue-600 hover:underline">{project.live_url}</a>
                        </p>

                        <h4 className="mt-4 font-semibold">ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ</h4>
                        <ul className="mt-2">
                            {(project.tech_stacks ?? []).length > 0 ? (
                                project.tech_stacks.map((stack) => (
                                    <li key={stack.id}>{stack.name}</li>
                                ))
                            ) : (
                                <p className="text-gray-500">ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </ul>

                        <h4 className="mt-4 font-semibold">„Çø„Ç∞</h4>
                        <ul className="mt-2">
                            {(project.tags ?? []).length > 0 ? (
                                project.tags.map((tag) => (
                                    <li key={tag.id}>{tag.name}</li>
                                ))
                            ) : (
                                <p className="text-gray-500">„Çø„Ç∞„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </ul>

                        <h4 className="mt-4 font-semibold">Â∑•Á®ã‰∏ÄË¶ß</h4>
                        <ul className="mt-2">
                            {(project.project_steps ?? []).length > 0 ? (
                                project.project_steps.map((step) => (
                                    <li key={step.id} className="border-b py-2">
                                        <h4 className="font-semibold">{step.title}</h4>
                                        <p className="text-gray-600">{step.description}</p>
                                    </li>
                                ))
                            ) : (
                                <p className="text-gray-500">Â∑•Á®ã„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ</p>
                            )}
                        </ul>

                        {/* ‚úÖ „ÅÑ„ÅÑ„Å≠Ê©üËÉΩ */}
                        <div className="mt-4 flex items-center">
                            <span className="text-gray-600 mr-2">{likeCount} „ÅÑ„ÅÑ„Å≠</span>
                        </div>

                        {/* ‚úÖ „Éõ„Éº„É†„Å´Êàª„Çã„Éú„Çø„É≥ */}
                        <div className="mt-6">
                            <Link href={route('home')} className="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600">
                                „Éõ„Éº„É†„Å∏Êàª„Çã
                            </Link>
                        </div>
                    </div>
                </div>
            </div>
        </GuestLayout>
    );
}
